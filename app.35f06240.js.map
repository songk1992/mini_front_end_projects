{"version":3,"sources":["core/router.ts","core/view.ts","page/index-view.ts","core/api/api.ts","config.ts","core/api/api_bible.ts","page/bible-view.ts","page/index.ts","store.ts","app.ts"],"names":[],"mappings":"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","file":"app.35f06240.js","sourceRoot":"..\\src","sourcesContent":["import View from './view';\r\nimport { RouteInfo } from '../types';\r\n\r\nexport default class Router { \r\n    routeTable: RouteInfo[];\r\n    defaultRoute: RouteInfo | null;\r\n\r\n    constructor() {\r\n      window.addEventListener('hashchange', this.route.bind(this));\r\n  \r\n      this.routeTable = [];\r\n      this.defaultRoute = null;\r\n    }\r\n    \r\n    setDefaultPage(page: View): void {\r\n      this.defaultRoute = { path: '', page };\r\n    }\r\n  \r\n    addRoutePath(path: string, page: View): void {\r\n      this.routeTable.push({ path, page });\r\n    }\r\n\r\n    route() {\r\n        const routePath = location.hash;\r\n    \r\n        if (routePath === '' && this.defaultRoute) {\r\n          this.defaultRoute.page.render();\r\n        }\r\n\r\n        for (const routeInfo of this.routeTable) {\r\n          if (routePath.indexOf(routeInfo.path) >= 0) {\r\n            routeInfo.page.render();\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n}","export default abstract class View {\r\n    private template: string;\r\n    private renderTemplate: string;\r\n    private container: HTMLElement;\r\n\r\n    constructor(containerId: string, template:string){\r\n        const containerElement = document.getElementById(containerId);\r\n\r\n        if(!containerElement){\r\n            throw '최상위 컨테이너가 존재하지 않습니다.';\r\n        }\r\n\r\n        this.container = containerElement;\r\n        this.template = template;\r\n        this.renderTemplate = template;\r\n    }\r\n\r\n    protected updateView(): void {\r\n        this.container.innerHTML = this.renderTemplate;\r\n        this.renderTemplate = this.template;\r\n      }\r\n\r\n    protected setTemplateData(key: string, value: string): void {\r\n    this.renderTemplate = this.renderTemplate.replace(`{{__${key}__}}`, value);\r\n    }\r\n\r\n    abstract render(...params: string[]): void;\r\n}","import View from '../core/view';\r\n\r\nconst template = `     \r\n<div class=\"my_container\">\r\n    <div class=\"my_text\">\r\n        <a href=\"#/bible/\"> 성경Api</a>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nexport default class IndexView extends View {\r\n    \r\n    constructor(containerId: string){\r\n        super(containerId, template);  \r\n    }\r\n\r\n    render(){\r\n        // TODO : 작업중\r\n        this.updateView();\r\n    }\r\n}\r\n\r\n    ","export default class Api {\r\n    url: string;\r\n\r\n    constructor(url: string){\r\n        this.url = url;\r\n    }\r\n\r\n    async request<AjaxResponse>(): Promise<AjaxResponse>{\r\n        const response = await fetch(this.url);\r\n        return await response.json() as AjaxResponse;\r\n    }\r\n\r\n}\r\n\r\n","export const BIBLE_URL = `https://raw.githubusercontent.com/songk1992/mini_front_end_projects/master/src/data/newTestament.json`;","import Api from './api';\r\nimport { BIBLE_URL } from \"../../config\";\r\nimport { BibleData } from '../../types';\r\n\r\n\r\n/**\r\n * 성경을 읽어오는 클래스\r\n * 추후 필요시 외부 URL 과 연결된 DB로 변경\r\n */\r\n export class BibleApi extends Api {\r\n    constructor(){\r\n        super(BIBLE_URL);\r\n    }\r\n\r\n    async getData(): Promise<BibleData>{\r\n        return this.request<BibleData>();\r\n    }\r\n\r\n}\r\n","import View from '../core/view';\r\nimport { BibleApi } from '../core/api/api_bible';\r\nimport BStore from '../store';\r\n\r\nconst template: string = `\r\n<div class=\"bible-menu\">\r\n<p>작업중</p>\r\n<p>{{__abbrev__}}</p>\r\n<p>{{__name__}}</p>\r\n<a href=\"#\"> 뒤로 가기</a>\r\n</div>\r\n\r\n<div class=\"bible_bg\">\r\n    <div class=\"bible_text\">\r\n        <p class=\"grow\">{{__ch_name__}} {{__ch_no__}} - {{__verse_no__}}</p>\r\n        <p class=\"grow\">{{__verse_text__}}</p>\r\n    </div>\r\n</div>\r\n`\r\n\r\nexport default class BibleView extends View {\r\n\r\n    private _bStore : BStore;\r\n    private _abbrev : string; // TODO 추후 수정\r\n    private _name : string; // TODO 추후 수정\r\n    private _book : any; // TODO 추후 수정\r\n    private _chapter : any; // TODO 추후 수정\r\n\r\n    constructor(containerId: string, bStore: BStore){\r\n        super(containerId, template);\r\n        this._bStore = bStore;\r\n        this._abbrev = '';\r\n        this._name = '';\r\n        this._book = null;\r\n        this._chapter = null;\r\n\r\n    }\r\n\r\n    render = async (): Promise<void> => {\r\n\r\n        if(this._book == null)\r\n        {\r\n            const api = new BibleApi();\r\n            const {abbrev, name, book} = await api.getData();\r\n\r\n            this._abbrev = abbrev;\r\n            this._name = name;\r\n            this._book = book;\r\n        }\r\n\r\n        // 신약 마태복음 추후 수정\r\n        let tempNo : number = Math.floor(Math.random() * this._book.length);\r\n        \r\n        const {ch_name, chapter} = this._book[tempNo];\r\n        if(ch_name == undefined || chapter == undefined)\r\n        {\r\n            return this.render();\r\n        }\r\n        this._chapter = chapter;\r\n\r\n        tempNo = Math.floor(Math.random() * this._chapter.length);\r\n        if(typeof(this._chapter.num) == \"string\")\r\n        {\r\n            return this.render();\r\n        }\r\n        // console.log(this._chapter);\r\n        // console.log(this._chapter[tempNo]);\r\n        // console.log(tempNo);\r\n        const {ch_no, verse} = this._chapter[tempNo];\r\n        if(ch_no == undefined || verse == undefined)\r\n        {\r\n            return this.render();\r\n        }\r\n        \r\n        const {verse_no, verse_text} = verse[this._bStore.currentVerse];\r\n        if(verse_no == undefined || verse_text == undefined)\r\n        {\r\n            return this.render();\r\n        }\r\n\r\n\r\n        this.setTemplateData('abbrev', this._abbrev);\r\n        this.setTemplateData('name', this._name);\r\n        this.setTemplateData('ch_name', ch_name);\r\n        this.setTemplateData('ch_no', ch_no);\r\n        this.setTemplateData('verse_no', verse_no);\r\n        this.setTemplateData('verse_text', verse_text);\r\n\r\n        this.updateView();\r\n    }\r\n    \r\n}","export { default as IndexView } from './index-view'\r\nexport { default as BibleView } from './bible-view'","import { BibleStore } from \"./types\";\r\n\r\nexport default class BStore implements BibleStore{\r\n    _currentBook: number;\r\n    _currentChapter: number;\r\n    _currentVerse: number;\r\nconstructor(cb : number =0, cc : number =0, cv : number =0){\r\n    this._currentBook = cb;\r\n    this._currentChapter = cc;\r\n    this._currentVerse = cv;\r\n}\r\n\r\nget currentBook(){\r\n    return this._currentBook;\r\n}\r\n\r\nset currentBook(cb: number){\r\n   this._currentBook = cb;\r\n}\r\n\r\nget currentChapter(){\r\n    return this._currentChapter;\r\n}\r\n\r\nset currentChapter(cc: number){\r\n   this._currentChapter = cc;\r\n}\r\n\r\nget currentVerse(){\r\n    return this._currentVerse;\r\n}\r\n\r\nset currentVerse(cv: number){\r\n   this._currentVerse = cv;\r\n}\r\n\r\n}","import Router from './core/router';\r\nimport { IndexView, BibleView }from './page/index';\r\nimport BStore from './store';\r\n\r\nconst bStore = new BStore();\r\nconst router: Router = new Router();\r\n\r\nconst indexView = new IndexView('root');\r\nconst bibleView = new BibleView('root', bStore);\r\n\r\nrouter.setDefaultPage(indexView);\r\n\r\nrouter.addRoutePath('/index', indexView);\r\nrouter.addRoutePath('/bible', bibleView);\r\n\r\nrouter.route();\r\n"]}
{"version":3,"sources":["core/router.ts","core/view.ts","page/index-view.ts","page/index.ts","app.ts"],"names":[],"mappings":";AAGA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAII,SAAA,IACE,OAAO,iBAAiB,aAAc,KAAK,MAAM,KAAK,OAEjD,KAAA,WAAa,GACb,KAAA,aAAe,KA0B1B,OAvBI,EAAA,UAAA,eAAA,SAAe,GACR,KAAA,aAAe,CAAE,KAAM,GAAI,KAAI,IAGtC,EAAA,UAAA,aAAA,SAAa,EAAc,GACpB,KAAA,WAAW,KAAK,CAAE,KAAI,EAAE,KAAI,KAGnC,EAAA,UAAA,MAAA,WACU,IAAA,EAAY,SAAS,KAET,KAAd,GAAoB,KAAK,cACtB,KAAA,aAAa,KAAK,SAGD,IAAA,IAAA,EAAA,EAAA,EAAA,KAAK,WAAL,EAAA,EAAA,OAAA,IAAiB,CAA9B,IAAA,EAAS,EAAA,GACd,GAAA,EAAU,QAAQ,EAAU,OAAS,EAAG,CAC1C,EAAU,KAAK,SACf,SAKZ,EAlCA,GAAA,QAAA,QAAA;;ACHA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,WAKI,SAAA,EAAY,EAAqB,GACvB,IAAA,EAAmB,SAAS,eAAe,GAE9C,IAAC,EACM,KAAA,uBAGL,KAAA,UAAY,EACZ,KAAA,SAAW,EACX,KAAA,eAAiB,EAS9B,OANc,EAAA,UAAA,WAAV,WACS,KAAA,UAAU,UAAY,KAAK,eAC3B,KAAA,eAAiB,KAAK,UAInC,EAvBA,GAAA,QAAA,QAAA;;ACWA,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,KAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAXA,IAAA,EAAA,EAAA,QAAA,iBAEM,EAAW,wJASjB,EAAA,SAAA,GAEI,SAAA,EAAY,GACR,OAAA,EAAA,KAAA,KAAM,EAAa,IAAS,KAOpC,OAVuC,EAAA,EAAA,GAMnC,EAAA,UAAA,OAAA,WAES,KAAA,cAEb,EAVA,CAAuC,EAAA,SAAvC,QAAA,QAAA;;ACXS,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAT,IAAA,EAAA,QAAA,gBAAS,QAAA,UAAA,EAAA;;ACYT,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAZA,IAAA,EAAA,EAAA,QAAA,kBACA,EAAA,QAAA,gBAIM,EAAiB,IAAI,EAAA,QACrB,EAAY,IAAI,EAAA,UAAU,QAEhC,EAAO,eAAe,GAEtB,EAAO,aAAa,SAAU,GAE9B,EAAO","file":"app.c364287c.js","sourceRoot":"..\\src","sourcesContent":["import View from './view';\r\nimport { RouteInfo } from '../types';\r\n\r\nexport default class Router { \r\n    routeTable: RouteInfo[];\r\n    defaultRoute: RouteInfo | null;\r\n\r\n    constructor() {\r\n      window.addEventListener('hashchange', this.route.bind(this));\r\n  \r\n      this.routeTable = [];\r\n      this.defaultRoute = null;\r\n    }\r\n    \r\n    setDefaultPage(page: View): void {\r\n      this.defaultRoute = { path: '', page };\r\n    }\r\n  \r\n    addRoutePath(path: string, page: View): void {\r\n      this.routeTable.push({ path, page });\r\n    }\r\n\r\n    route() {\r\n        const routePath = location.hash;\r\n    \r\n        if (routePath === '' && this.defaultRoute) {\r\n          this.defaultRoute.page.render();\r\n        }\r\n    \r\n        for (const routeInfo of this.routeTable) {\r\n          if (routePath.indexOf(routeInfo.path) >= 0) {\r\n            routeInfo.page.render();\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n}","export default abstract class View {\r\n    private template: string;\r\n    private renderTemplate: string;\r\n    private container: HTMLElement;\r\n\r\n    constructor(containerId: string, template:string){\r\n        const containerElement = document.getElementById(containerId);\r\n\r\n        if(!containerElement){\r\n            throw '최상위 컨테이너가 존재하지 않습니다.';\r\n        }\r\n\r\n        this.container = containerElement;\r\n        this.template = template;\r\n        this.renderTemplate = template;\r\n    }\r\n\r\n    protected updateView(): void {\r\n        this.container.innerHTML = this.renderTemplate;\r\n        this.renderTemplate = this.template;\r\n      }\r\n\r\n    abstract render(...params: string[]): void;\r\n}","import View from '../core/view';\r\n\r\nconst template = `     \r\n<div class=\"my_container\">\r\n    <div class=\"my_text\">\r\n        <a href=\"#\"> 성경Api</a>\r\n        <a href=\"#\"> N사 클론 코딩</a>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nexport default class IndexView extends View {\r\n    \r\n    constructor(containerId: string){\r\n        super(containerId, template);  \r\n    }\r\n\r\n    render(){\r\n        // TODO : 작업중\r\n        this.updateView();\r\n    }\r\n}\r\n\r\n    ","export { default as IndexView } from './index-view'","import Router from './core/router';\r\nimport { IndexView }from './page/index';\r\n\r\n\r\n\r\nconst router: Router = new Router();\r\nconst indexView = new IndexView('root');\r\n\r\nrouter.setDefaultPage(indexView);\r\n\r\nrouter.addRoutePath('/index', indexView);\r\n\r\nrouter.route();"]}